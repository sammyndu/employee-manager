@model EManager3User
@inject UserManager<EManager3User> UserManager
@using System.Globalization

@{
    ViewData["Title"] = "Details";
}


<div>
    <h4>Personal Info</h4>
    <div>
        <a asp-controller="Admin" asp-action="Index">Back to List</a> | <a asp-action="Update" asp-route-id="@Model.Id">Update</a>
        
    </div>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Sex)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Sex)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.DOB)
        </dt>
        <dd class="col-sm-9">
            @{
                if (Model.DOB != DateTime.MinValue){
                    @Model.DOB.ToString("dd MMMM yyyy")
                }
    
            }
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.MaritalStatus)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.MaritalStatus)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.NumberOfChildren)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.NumberOfChildren)
        </dd>
        <dt class="col-sm-3">
            
            @Html.DisplayNameFor(model => model.EmploymentDate)
        </dt>
        <dd class="col-sm-9">
            @{
                if (Model.EmploymentDate != DateTime.MinValue){
                    @Model.EmploymentDate.Value.ToString("dd MMMM yyyy")
                }
    
            }
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.HighestEducationQualification)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.HighestEducationQualification)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.School)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.School)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.ServiceYear)
        </dt>
        <dd class="col-sm-9">
            @{
                if (Model.ServiceYear.HasValue &&  Model.ServiceYear != DateTime.MinValue){
                    @Model.ServiceYear.Value.ToString("dd MMMM yyyy")
                }
    
            }
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.CompanyPosition)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.CompanyPosition)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.LastPromotionDate)
        </dt>
        <dd class="col-sm-9">
            @{
                if (Model.LastPromotionDate != DateTime.MinValue){
                    @Model.LastPromotionDate.Value.ToString("dd MMMM yyyy")
                }
    
            }
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.YearlySalary)
        </dt>
        <dd class="col-sm-9">
            @Model.YearlySalary.ToString("C", new CultureInfo("en-NG"))
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Subordinates)
        </dt>
        <dd class="col-sm-9">
            <div class="dropdown">
                <button class="btn btn-sm btn-primary dropdown-toggle" type="button" id="dropdownmenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">View</button>
                <div class="dropdown-menu" aria-labelledby="dropdownmenu">
                @{if (Model.Subordinates.Count == 0){
                    <Span></span>
                }
                else{
                    @foreach(var mod in Model.Subordinates){
                        if (mod.SubordinateId != null){
                            var user = await UserManager.FindByIdAsync(mod.SubordinateId);
                            if (user != null)
                            {<a class="dropdown-item" href="" >@user.FirstName @user.LastName (@user.Email)</a>}
                        }
                    }
                }
                }                    
                </div>
            </div>
        </dd>
    </dl>
</div>
